sudo: required
dist: trusty
language: cpp

jdk:
  - oraclejdk8

env:
  global:
    # AWS_PRIVATE encrypted by travis encrypt
    - secure: "XZ57MYNSu1Cj9yst/K2hBjrDycHRU546QGhS1PzHYc4bBEe6NhKeZs0IF5Fy25traxO+XRLQWqs2nO8n2Al/WGQTTYEU8anbpfc9JikiNrkJ671wpY1Owh6zpM+wrjGVGmBPovyOVZrsTDcSwWH/xgDIecH9VDu0w+NjtHOdcEF+9yD6xhN3muurd8KJ785pj6PxTlvhHlEJsC5hgNau4c1veKP+uHtkABo4zH2JSdCbiZzJ4cc+tkloGBXHWln+Z+Ezpp6+3NwJk80IwvgRbAnKsJpgFBrOd/N0RmjFmEk52Dl1X4K6rMzWKKxIJnyxVC7mZQyX+XDAsa3BKEWq+J3gBN7fHEazxVyBSOqT4KWn4EiiwUHUGPDBZTXsRf6gcKYPmhLUT+dO9rT8kqb8JRgVS+vBKFrQ1dByBPtqaEIInqFUd9mgs7c4J0OpJYjihzf3tCBHN5lrf/G647/49BPYjlBP3+OT8QE6sQbICju+bhNR+dtgimzavd2f7XZiaaRb9Z73pNv5InM5m/0IGFtLIpwHDSbKDF14nhn6qyFzN8HGMfes+xLLKCIMMRw0ZXAvcBXoEgP4Sb4RbjT6vr3zbt9CIS0HpHUGPttH4wqRmg/jNICk52BH6HDs4JKmnxg1HA8Q0Ct87lHOz0hd/p6RvFIPzX5D2K+6RrA2QOg="

deploy:
  provider: s3
  access_key_id: "AKIAJGTYPWNIU3GRBOJA"
  secret_access_key: "$AWS_PRIVATE"
  bucket: "comphackserv"
  skip_cleanup: true
  region: us-east-1
  upload-dir: build

matrix:
  include:
    - compiler: clang
      env:
        - COMPILER_CC=clang
        - COMPILER_CXX=clang++
        - CMAKE_GENERATOR='Unix Makefiles'
    - compiler: clang
      env:
        - COMPILER_CC=clang
        - COMPILER_CXX=clang++
        - CMAKE_GENERATOR=Ninja
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env:
        - COMPILER_CC=gcc-4.9
        - COMPILER_CXX=g++-4.9
        - CMAKE_GENERATOR='Unix Makefiles'
    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
        - COMPILER_CC=gcc-5
        - COMPILER_CXX=g++-5
        - CMAKE_GENERATOR='Unix Makefiles'

before_install:
  - sudo apt-get update -q
  - sudo apt-get install libssl-dev doxygen libsqlite3-dev sqlite3 libuv-dev unzip -y
  - export cwd="`pwd`"
  - sudo mkdir -p /opt/ninja/bin
  - cd /opt/ninja/bin
  - sudo wget https://github.com/ninja-build/ninja/releases/download/v1.7.1/ninja-linux.zip
  - sudo unzip ninja-linux.zip
  - sudo chmod 755 ninja
  - sudo rm ninja-linux.zip
  - export PATH="/opt/ninja/bin:${PATH}"
  - cd /opt
  - sudo wget -q https://cmake.org/files/v3.6/cmake-3.6.1-Linux-x86_64.tar.gz
  - sudo tar xf cmake-3.6.1-Linux-x86_64.tar.gz
  - sudo rm cmake-3.6.1-Linux-x86_64.tar.gz
  - export PATH="/opt/cmake-3.6.1-Linux-x86_64/bin:${PATH}"
  - export LD_LIBRARY_PATH="/opt/cmake-3.6.1-Linux-x86_64/lib"
  - cd $cwd
  - if [ "$CXX" == "clang++" ]; then export cwd="`pwd`"; fi
  - if [ "$CXX" == "clang++" ]; then cd /opt; fi
  - if [ "$CXX" == "clang++" ]; then sudo wget -q http://llvm.org/releases/3.8.0/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz; fi
  - if [ "$CXX" == "clang++" ]; then sudo tar xf clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz; fi
  - if [ "$CXX" == "clang++" ]; then sudo rm clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz; fi
  - if [ "$CXX" == "clang++" ]; then export PATH="/opt/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04/bin:${PATH}"; fi
  - if [ "$CXX" == "clang++" ]; then export LD_LIBRARY_PATH="/opt/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04/lib:${LD_LIBRARY_PATH}"; fi
  - if [ "$CXX" == "clang++" ]; then cd "$cwd"; fi
  - export CC="${COMPILER_CC}"
  - export CXX="${COMPILER_CXX}"
  - export GENERATOR="${CMAKE_GENERATOR}"

script:
  - jdk_switcher use oraclejdk8
  - java -version
  - wget http://apache.claz.org/cassandra/3.7/apache-cassandra-3.7-bin.tar.gz
  - tar xzf apache-cassandra-3.7-bin.tar.gz
  - sudo mv apache-cassandra-3.7 /opt/cassandra
  - rm apache-cassandra-3.7-bin.tar.gz
  - sudo mkdir /var/lib/cassandra
  - sudo mkdir /var/log/cassandra
  - sudo chown -R $USER:$GROUP /var/lib/cassandra
  - sudo chown -R $USER:$GROUP /var/log/cassandra
  - export CASSANDRA_HOME="/opt/cassandra"
  - export PATH="$PATH:$CASSANDRA_HOME/bin"
  - sudo sh "$CASSANDRA_HOME/bin/cassandra" -R
  - sleep 10
  - nodetool status
  - cqlsh -e "SHOW HOST; SHOW VERSION;"
  - mkdir -p build && cd build && cmake -G "${GENERATOR}" .. && cmake --build . && cmake --build . --target Experimental
