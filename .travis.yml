sudo: false
dist: trusty
language: cpp

#jdk:
  #- oraclejdk8

cache:
  directories:
    - cache

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "Ncn6/msd5oa9PiMYS5y3bpqbcqnB9Wwr7UIEtDS6fd1X01sk7aWF267kMNq8ijosJtk1P4vjKmZomfhTyQgILV6UkNkSDae5NOc39XM9yoysxc6LHTnF8/E5wXgbV1oDJR9kenrBzX49ZRJxwYa9WgXsGz4AiDyUB9eMy48eomnyNXG/SkZBbPmxaI0zSCACWH0VMHwvxHOHnaXHMOuQDVN+oxP4gEdQ/Cz2P0QJl1TvE5hpYB9fW/yItcdgL7sVkiFXbkZh5l3s52fGEN339e9CEEEEqnEUmFAzq0nsZNKZqh+ivh4Ga2qJa+btLGkEYyNQyKpOjy21Wx8UKY6uT5ZVxdSK943dbn0+v2nr0K++Hu2mRoq3btMfza5PZGQrK/XdOgathqxMoqSlKKXNo5qQoHfyjRLUscaZPsF/kWfnUoRGA90Eg6RLq59gsKkQjSJ0cWJ6Czt2txJZvmAZn51thBMJ3QW88+taDXkSVXsXkrdPjGPrwUt+okhvXJK5+PeSa+Fb4CJUiijOAg9Sew+WDJdsP9d0gVtEncXiVdAgdUFZ9wbyKCrjPisKxZWzzMDr+7tT3MQmg8FagPMkm5PW9Q+Ewof2VLjxffX+PhHcWvUrVqe8KBEVuJNs4SYG0ETsvp0+y8tyh5o+zAmc8fKsuYmEDNJ727rjrTfA56A="

addons:
  coverity_scan:
    project:
      name: "comphack/comp_hack"
      description: "Build submitted via Travis CI"
    notification_email: compomega@tutanota.com
    build_command_prepend: "mkdir build && cd build && cmake -G \"${GENERATOR\" .."
    build_command: "cmake --build ."
    branch_pattern: coverity_scan

matrix:
  include:
    - compiler: clang
      addons:
        apt:
          packages:
            - cmake
            - libssl-dev
            - libuv-dev
            - libqt5webkit5-dev
      env:
        - COMPILER_CC=clang
        - COMPILER_CXX=clang++
        - CMAKE_GENERATOR='Unix Makefiles'

    - compiler: clang
      addons:
        apt:
          packages:
            - cmake
            - libssl-dev
            - libuv-dev
            - libqt5webkit5-dev
            - ninja-build
      env:
        - COMPILER_CC=clang
        - COMPILER_CXX=clang++
        - CMAKE_GENERATOR=Ninja

    - compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
            - cmake
            - libssl-dev
            - libuv-dev
            - libqt5webkit5-dev
      env:
        - COMPILER_CC=gcc-5
        - COMPILER_CXX=g++-5
        - CMAKE_GENERATOR='Unix Makefiles'

before_install:
  - export ROOT_DIR=`pwd`
  - export CACHE_DIR=`pwd`/cache
  - export COVERALLS_ENABLE=OFF
  - export COVERALLS_SERVICE_NAME=travis-ci
  - cd ${CACHE_DIR}
  - if [ ! -f external-0.1.1-clang.tar.bz2 ]; then wget -q https://github.com/comphack/external/releases/download/external-5/external-0.1.1-clang.tar.bz2; fi
  - if [ ! -f external-0.1.1-gcc5.tar.bz2 ]; then wget -q https://github.com/comphack/external/releases/download/external-5/external-0.1.1-gcc5.tar.bz2; fi
  - cd ${ROOT_DIR}
  - cd ${ROOT_DIR}
  - if [ "$CXX" == "clang++" ]; then tar xf $CACHE_DIR/external-0.1.1-clang.tar.bz2; fi
  - if [ "$CXX" != "clang++" ]; then tar xf $CACHE_DIR/external-0.1.1-gcc5.tar.bz2; fi
  - mv external-* binaries
  - chmod +x binaries/ttvfs/bin/ttvfs_gen
  - if [ "$CXX" != "clang++" ]; then export COVERALLS_ENABLE=ON; fi
  - export CC="${COMPILER_CC}"
  - export CXX="${COMPILER_CXX}"
  - export GENERATOR="${CMAKE_GENERATOR}"
  - export CTEST_OUTPUT_ON_FAILURE=1

script:
  - mkdir -p build && cd build && cmake -DCOVERALLS=$COVERALLS_ENABLE -DBUILD_OPTIMIZED=OFF -G "${GENERATOR}" .. && cmake --build .
